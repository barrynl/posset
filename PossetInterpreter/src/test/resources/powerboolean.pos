main ( 
	Boolean b[A];
	True t[B];
	False f[C];
	
	
	/* equals true */
	Inverse i1 (
		first[Z];
		second[Y];	
	)
	XOr x1 (
		first[A];
		second[B];
		third[Z];
	)

	/* equals false */
	Inverse i2 (
		first[X];
		second[W];	
	)
	XOr x2 (
		first[A];
		second[C];
		third[X];
	)
	
	/* one of them should be the case */
	XOr o1 (
		first[Y];
		second[W];
		third[D];
	)
	True t2[D];
)




















TwoBoolean (
	Boolean b1;
	Boolean b2;
)

TwoBooOne (
	TwoBoolean t ( 
		b1[A];
		b2[B]; 
	)
)
{
	(A,B)
	(#1,#1)
}

TwoBooTwo (
	TwoBoolean t ( 
		b1[A];
		b2[B]; 
	)
)
{
	(A,B)
	(#1,#2)
}

TwoBooThree (
	TwoBoolean t ( 
		b1[A];
		b2[B]; 
	)
)
{
	(A,B)
	(#2,#1)
}

TwoBooFour (
	TwoBoolean t ( 
		b1[A];
		b2[B]; 
	)
)
{
	(A,B)
	(#2,#2)
}

TwoBooEquals (
	TwoBoolean t1
	(
		b1[A];
		b2[B];
	)
	TwoBoolean t2
	(
		b1[C];
		b2[D];
	)
	Boolean b[E];
	
	And a1
	(
		first[A];
		second[C];
		third[F];
	)
	
	And a2
	(
		first[B];
		second[D];
		third[G];
	)
	
	And a3
	(
		first[F];
		second[G];
		third[E];
	)
)











Inverse
(

	Boolean first ( first[A]; )
	Boolean second ( first[B]; )
)
{
	(A, B)
	(#1,#2)
	(#2,#1)
}


Or
(
	Boolean first ( first[A]; )
	Boolean second ( first[B]; )
	Boolean third ( first[C]; )
)
{
	(A,B,C)
	(#1,#1,#1)
	(#1,#2,#1)
	(#2,#1,#1)
	(#2,#2,#2)
}

XOr
(
	Boolean first (first[A];)
	Boolean second (first[B];)
	Boolean third (first[C];)
)
{
	(A,B,C)
	(#1,#1,#2)
	(#1,#2,#1)
	(#2,#1,#1)
	(#2,#2,#2)
}

And
(
	Boolean first (first[A];)
	Boolean second (first[B];)
	Boolean third (first[C];)
)
{
	(A,B,C)
	(#1,#1,#1)
	(#1,#2,#2)
	(#2,#1,#2)
	(#2,#2,#2)
}

True
(
	Boolean first
	(
		first[A];
	)
)
{
	(A)
	(#1)
}

False
(
	Boolean first
	(
		first[A];
	)
)
{
	(A)
	(#2)
}

/* The boolean consists of two possible values. */
Boolean
(
	'2 first;
)